KW: void
ID: sub
(
KW: int
ID: a
,
KW: int
ID: b
)
{
ID: a
-
ID: b
;
ID: a
>
ID: b
;
ID: a
<=
ID: b
;
KW: return
;
}
KW: void
ID: yeetsub
(
KW: int
ID: a
)
{
KW: return
ID: a
;
}
KW: void
ID: newsub
(
KW: void
)
{
}
KW: int
ID: foointvoid
(
KW: int
ID: a
,
KW: int
ID: b
[
]
,
KW: int
ID: c
,
KW: int
ID: d
[
]
)
{
KW: int
ID: e
;
KW: int
ID: m
;
KW: int
ID: f
;
KW: int
ID: g
;
KW: if
(
ID: a
+
ID: b
[
INT: 1
+
INT: 2
*
INT: 3
]
>
(
ID: a
*
(
(
ID: a
)
)
)
)
KW: if
(
ID: b
[
INT: 1
]
>
ID: b
[
INT: 4
+
(
INT: 5
*
(
INT: 6
-
(
INT: 7
/
(
INT: 8
)
)
)
)
]
)
ID: main
(
)
;
KW: else
{
KW: int
ID: f
[
INT: 9
]
;
}
ID: c
=
ID: d
[
ID: b
[
ID: b
[
INT: 0
]
]
]
+
(
INT: 9
*
ID: d
[
ID: main
(
)
+
INT: 1
]
+
ID: d
[
ID: a
*
INT: 10
]
)
+
ID: c
;
;
;
;
;
{
KW: int
ID: q
;
{
{
KW: int
ID: f
[
INT: 99
]
;
ID: f
[
INT: 0
]
=
ID: f
[
INT: 1
]
=
ID: d
[
INT: 0
]
+
ID: c
*
INT: 20
;
KW: return
ID: foointvoid
(
ID: b
[
ID: e
]
+
ID: q
,
ID: b
,
ID: c
+
ID: d
[
INT: 11
]
+
ID: d
[
INT: 12
]
/
(
ID: d
[
INT: 13
]
/
(
ID: d
[
INT: 14
]
*
ID: d
[
INT: 15
]
)
)
,
ID: f
)
;
}
}
ID: q
+
INT: 4
;
}
KW: while
(
INT: 16
+
INT: 17
/
INT: 18
*
INT: 19
-
INT: 20
-
(
INT: 21
-
INT: 22
)
)
{
KW: int
ID: g
;
KW: if
(
INT: 214
>
INT: 214
)
{
KW: return
ID: g
;
KW: return
ID: f
;
}
KW: return
ID: g
+
ID: foointvoid
/
INT: 9999
;
}
KW: while
(
(
INT: 90
<
INT: 91
)
!=
(
INT: 91
>
INT: 92
)
)
;
ID: e
=
ID: a
>
INT: 0
+
INT: 4
;
ID: m
=
ID: f
=
ID: g
=
ID: d
[
INT: 1
+
ID: main
(
)
/
INT: 4
/
(
INT: 4
-
INT: 4
+
INT: 4
*
INT: 4
)
]
=
ID: c
;
KW: if
(
ID: a
)
;
KW: else
;
KW: if
(
ID: m
>
ID: f
)
{
KW: return
ID: d
[
INT: 0
]
;
}
KW: else
KW: return
ID: d
[
INT: 1
]
;
}
KW: int
ID: main
(
KW: void
)
{
KW: int
ID: a
;
KW: int
ID: b
[
INT: 1
]
;
KW: int
ID: c
;
KW: int
ID: d
[
INT: 1
]
;
ID: a
=
ID: yeetsub
(
INT: 4
)
;
ID: sub
(
INT: 4
,
INT: 6
)
;
ID: intmainvoid
(
ID: a
=
INT: 4
+
INT: 4
,
ID: b
,
ID: c
,
ID: d
)
;
ID: newsub
(
)
;
KW: return
INT: 0
;
}
